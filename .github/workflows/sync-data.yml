name: Daily Pokemon TCG Data Update

on:
  workflow_dispatch:
  schedule:
    - cron: '0 6 * * *'  # Daily at 6 AM UTC (7 AM BST)

jobs:
  update-pokemon-data:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          if [ -f package-lock.json ]; then
            npm ci --prefer-offline --no-audit --no-fund
          else
            npm install --no-audit --no-fund
          fi

      - name: Create data directory
        run: mkdir -p data

      - name: Fetch Pokemon card data
        run: |
          echo "üé¥ Fetching Pokemon card data..."
          node scripts/fetch-cards.js
          echo "‚úÖ Card data fetch completed"
          ls -la data/

      - name: Process raw cards to cards-all.json
        run: |
          echo "üîÑ Processing raw card data..."
          node -e "
            const fs = require('fs');
            const rawData = JSON.parse(fs.readFileSync('data/raw-cards.json', 'utf8'));
            fs.writeFileSync('data/cards-all.json', JSON.stringify(rawData.cards, null, 2));
            console.log(\`‚úÖ Processed \${rawData.cards.length} cards\`);
          "

      - name: Extract and fix card sets
        run: |
          echo "üîß Extracting card set information..."
          node fix-card-sets.js
          echo "‚úÖ Card sets fixed"

      - name: Fetch comprehensive pricing data
        env:
          TCGCSV_URL: ${{ secrets.TCGCSV_URL }}
        run: |
          echo "üí∞ Fetching comprehensive pricing data..."
          node tcgcsv-scraper.js
          echo "‚úÖ Pricing data scraped"

      - name: Fix fractional pricing keys
        run: |
          echo "üîß Fixing pricing key formats..."
          if [ -f fix-fractional-numbers.js ]; then
            node fix-fractional-numbers.js
          else
            echo "‚ö†Ô∏è  Fractional fix script not found, skipping..."
          fi

      - name: Merge card and pricing data
        run: |
          echo "üîó Merging card and pricing data..."
          node scripts/merge-data.js
          echo "‚úÖ Data merge completed"

      - name: Generate comprehensive summary
        id: summary
        run: |
          echo "üìä Generating update summary..."
          node generate-summary.js
          
          # Check if summary was generated successfully
          if [ -f summary.json ]; then
            echo "summary_generated=true" >> $GITHUB_OUTPUT
            
            # Extract key metrics for GitHub Actions summary
            TOTAL_CARDS=$(node -pe "JSON.parse(require('fs').readFileSync('summary.json', 'utf8')).totalCards")
            CARDS_WITH_PRICING=$(node -pe "JSON.parse(require('fs').readFileSync('summary.json', 'utf8')).cardsWithPricing")
            COVERAGE=$(node -pe "JSON.parse(require('fs').readFileSync('summary.json', 'utf8')).pricingCoverage")
            
            echo "total_cards=$TOTAL_CARDS" >> $GITHUB_OUTPUT
            echo "cards_with_pricing=$CARDS_WITH_PRICING" >> $GITHUB_OUTPUT
            echo "coverage=$COVERAGE" >> $GITHUB_OUTPUT
          else
            echo "summary_generated=false" >> $GITHUB_OUTPUT
          fi

      - name: Process email template
        if: steps.summary.outputs.summary_generated == 'true'
        run: |
          echo "üìß Processing email template with data..."
          node process-email-template.js
          echo "‚úÖ Email template processed"

      - name: Upload processed data
        run: |
          echo "‚¨ÜÔ∏è Uploading processed data..."
          node upload-to-github.js
          echo "‚úÖ Data uploaded to GitHub"

      - name: Commit and push changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          
          # Add all data files
          git add data/
          git add summary.json
          
          if git diff --cached --quiet; then
            echo "üìù No changes to commit"
            echo "no_changes=true" >> $GITHUB_ENV
          else
            echo "üìù Committing changes..."
            git commit -m "üîÑ Daily Pokemon TCG data update - $(date -u +%Y-%m-%d)"
            git push
            echo "‚úÖ Changes pushed successfully"
            echo "no_changes=false" >> $GITHUB_ENV
          fi

      - name: Create GitHub Actions Summary
        if: always()
        run: |
          echo "# üé¥ Pokemon TCG Data Update Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Update Date:** $(date -u '+%Y-%m-%d %H:%M UTC')" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ steps.summary.outputs.summary_generated }}" == "true" ]; then
            echo "## üìä Statistics" >> $GITHUB_STEP_SUMMARY
            echo "| Metric | Value |" >> $GITHUB_STEP_SUMMARY
            echo "|--------|-------|" >> $GITHUB_STEP_SUMMARY
            echo "| Total Cards | ${{ steps.summary.outputs.total_cards }} |" >> $GITHUB_STEP_SUMMARY
            echo "| Cards with Pricing | ${{ steps.summary.outputs.cards_with_pricing }} |" >> $GITHUB_STEP_SUMMARY
            echo "| Pricing Coverage | ${{ steps.summary.outputs.coverage }} |" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            
            if [ "${{ env.no_changes }}" == "false" ]; then
              echo "‚úÖ **Status:** Data updated and committed to repository" >> $GITHUB_STEP_SUMMARY
            else
              echo "‚ÑπÔ∏è **Status:** No changes detected in data" >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "‚ùå **Status:** Summary generation failed" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "üîó **Next Steps:** Shopify will automatically fetch updated data from GitHub" >> $GITHUB_STEP_SUMMARY

      - name: Send success email notification
        if: env.no_changes == 'false' && secrets.EMAIL_USERNAME != '' && secrets.NOTIFICATION_EMAIL != ''
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "‚úÖ Pokemon TCG Data Updated - ${{ steps.summary.outputs.total_cards }} Cards (${{ steps.summary.outputs.coverage }} Coverage)"
          to: ${{ secrets.NOTIFICATION_EMAIL }}
          from: ${{ secrets.EMAIL_USERNAME }}
          html_body: file://email-notification.html
          body: file://email-notification.txt
          attachments: summary.json

      - name: Send no-changes email notification
        if: env.no_changes == 'true' && secrets.EMAIL_USERNAME != '' && secrets.NOTIFICATION_EMAIL != ''
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "‚ÑπÔ∏è Pokemon TCG Data - No Changes Detected"
          to: ${{ secrets.NOTIFICATION_EMAIL }}
          from: ${{ secrets.EMAIL_USERNAME }}
          body: |
            üé¥ Pokemon TCG Data Update - No Changes
            =====================================
            
            The daily Pokemon TCG data update ran successfully but no changes were detected.
            
            This means:
            ‚Ä¢ No new cards were found
            ‚Ä¢ No pricing updates were available
            ‚Ä¢ All data remains current
            
            Current Stats:
            ‚Ä¢ Total Cards: ${{ steps.summary.outputs.total_cards }}
            ‚Ä¢ Cards with Pricing: ${{ steps.summary.outputs.cards_with_pricing }}
            ‚Ä¢ Pricing Coverage: ${{ steps.summary.outputs.coverage }}
            
            Time: $(date -u '+%Y-%m-%d %H:%M UTC')
            Next update: Tomorrow at 6:00 AM UTC
            
            ü§ñ Automated by GitHub Actions

      - name: Send failure notification
        if: failure() && secrets.EMAIL_USERNAME != '' && secrets.NOTIFICATION_EMAIL != ''
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "‚ùå Pokemon TCG Data Update Failed - $(date +%Y-%m-%d)"
          to: ${{ secrets.NOTIFICATION_EMAIL }}
          from: ${{ secrets.EMAIL_USERNAME }}
          body: |
            ‚ùå Pokemon TCG Data Update Failed
            ================================
            
            The daily Pokemon TCG data update failed.
            
            üîç Check the GitHub Actions logs for details:
            https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
            
            üìã Failure Details:
            ‚Ä¢ Time: $(date -u '+%Y-%m-%d %H:%M UTC')
            ‚Ä¢ Repository: ${{ github.repository }}
            ‚Ä¢ Workflow: ${{ github.workflow }}
            ‚Ä¢ Run ID: ${{ github.run_id }}
            
            ‚ö†Ô∏è Next scheduled update: Tomorrow at 6:00 AM UTC
            
            üõ†Ô∏è You may need to:
            1. Check the repository secrets (TCGCSV_URL, email settings)
            2. Verify the data source is accessible
            3. Review any recent changes to the scripts
            
            ü§ñ Automated by GitHub Actions

      - name: Upload debug artifacts on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: debug-data-${{ github.run_number }}
          path: |
            data/
            *.log
            *.json
            *.html
            *.txt
          retention-days: 7

      - name: Post-update cleanup
        if: always()
        run: |
          echo "üßπ Cleaning up temporary files..."
          
          # Keep important files, remove temporary ones
          find . -name "*.tmp" -type f -delete 2>/dev/null || true
          find . -name "*.temp" -type f -delete 2>/dev/null || true
          
          echo "‚úÖ Cleanup completed"name: Daily Pokemon TCG Data Update

on:
  workflow_dispatch:
  schedule:
    - cron: '0 6 * * *'  # Daily at 6 AM UTC (7 AM BST)

jobs:
  update-pokemon-data:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          if [ -f package-lock.json ]; then
            npm ci --prefer-offline --no-audit --no-fund
          else
            npm install --no-audit --no-fund
          fi

      - name: Create data directory
        run: mkdir -p data

      - name: Fetch Pokemon card data
        run: |
          echo "üé¥ Fetching Pokemon card data..."
          node scripts/fetch-cards.js
          echo "‚úÖ Card data fetch completed"
          ls -la data/

      - name: Process raw cards to cards-all.json
        run: |
          echo "üîÑ Processing raw card data..."
          node -e "
            const fs = require('fs');
            const rawData = JSON.parse(fs.readFileSync('data/raw-cards.json', 'utf8'));
            fs.writeFileSync('data/cards-all.json', JSON.stringify(rawData.cards, null, 2));
            console.log(\`‚úÖ Processed \${rawData.cards.length} cards\`);
          "

      - name: Extract and fix card sets
        run: |
          echo "üîß Extracting card set information..."
          node fix-card-sets.js
          echo "‚úÖ Card sets fixed"

      - name: Fetch comprehensive pricing data
        env:
          TCGCSV_URL: ${{ secrets.TCGCSV_URL }}
        run: |
          echo "üí∞ Fetching comprehensive pricing data..."
          node tcgcsv-scraper.js
          echo "‚úÖ Pricing data scraped"

      - name: Fix fractional pricing keys
        run: |
          echo "üîß Fixing pricing key formats..."
          if [ -f fix-fractional-numbers.js ]; then
            node fix-fractional-numbers.js
          else
            echo "‚ö†Ô∏è  Fractional fix script not found, skipping..."
          fi

      - name: Merge card and pricing data
        run: |
          echo "üîó Merging card and pricing data..."
          node scripts/merge-data.js
          echo "‚úÖ Data merge completed"

      - name: Generate comprehensive summary
        id: summary
        run: |
          echo "üìä Generating update summary..."
          node generate-summary.js
          
          # Check if summary was generated successfully
          if [ -f summary.json ]; then
            echo "summary_generated=true" >> $GITHUB_OUTPUT
            
            # Extract key metrics for GitHub Actions summary
            TOTAL_CARDS=$(node -pe "JSON.parse(require('fs').readFileSync('summary.json', 'utf8')).totalCards")
            CARDS_WITH_PRICING=$(node -pe "JSON.parse(require('fs').readFileSync('summary.json', 'utf8')).cardsWithPricing")
            COVERAGE=$(node -pe "JSON.parse(require('fs').readFileSync('summary.json', 'utf8')).pricingCoverage")
            
            echo "total_cards=$TOTAL_CARDS" >> $GITHUB_OUTPUT
            echo "cards_with_pricing=$CARDS_WITH_PRICING" >> $GITHUB_OUTPUT
            echo "coverage=$COVERAGE" >> $GITHUB_OUTPUT
          else
            echo "summary_generated=false" >> $GITHUB_OUTPUT
          fi

      - name: Process email template
        if: steps.summary.outputs.summary_generated == 'true'
        run: |
          echo "üìß Processing email template with data..."
          node process-email-template.js
          echo "‚úÖ Email template processed"

      - name: Upload processed data
        run: |
          echo "‚¨ÜÔ∏è Uploading processed data..."
          node upload-to-github.js
          echo "‚úÖ Data uploaded to GitHub"

      - name: Commit and push changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          
          # Add all data files
          git add data/
          git add summary.json
          
          if git diff --cached --quiet; then
            echo "üìù No changes to commit"
            echo "no_changes=true" >> $GITHUB_ENV
          else
            echo "üìù Committing changes..."
            git commit -m "üîÑ Daily Pokemon TCG data update - $(date -u +%Y-%m-%d)"
            git push
            echo "‚úÖ Changes pushed successfully"
            echo "no_changes=false" >> $GITHUB_ENV
          fi

      - name: Create GitHub Actions Summary
        if: always()
        run: |
          echo "# üé¥ Pokemon TCG Data Update Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Update Date:** $(date -u '+%Y-%m-%d %H:%M UTC')" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ steps.summary.outputs.summary_generated }}" == "true" ]; then
            echo "## üìä Statistics" >> $GITHUB_STEP_SUMMARY
            echo "| Metric | Value |" >> $GITHUB_STEP_SUMMARY
            echo "|--------|-------|" >> $GITHUB_STEP_SUMMARY
            echo "| Total Cards | ${{ steps.summary.outputs.total_cards }} |" >> $GITHUB_STEP_SUMMARY
            echo "| Cards with Pricing | ${{ steps.summary.outputs.cards_with_pricing }} |" >> $GITHUB_STEP_SUMMARY
            echo "| Pricing Coverage | ${{ steps.summary.outputs.coverage }} |" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            
            if [ "${{ env.no_changes }}" == "false" ]; then
              echo "‚úÖ **Status:** Data updated and committed to repository" >> $GITHUB_STEP_SUMMARY
            else
              echo "‚ÑπÔ∏è **Status:** No changes detected in data" >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "‚ùå **Status:** Summary generation failed" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "üîó **Next Steps:** Shopify will automatically fetch updated data from GitHub" >> $GITHUB_STEP_SUMMARY

      - name: Send success email notification
        if: env.no_changes == 'false' && secrets.EMAIL_USERNAME != '' && secrets.NOTIFICATION_EMAIL != ''
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "‚úÖ Pokemon TCG Data Updated - ${{ steps.summary.outputs.total_cards }} Cards (${{ steps.summary.outputs.coverage }} Coverage)"
          to: ${{ secrets.NOTIFICATION_EMAIL }}
          from: ${{ secrets.EMAIL_USERNAME }}
          html_body: file://email-notification.html
          body: file://email-notification.txt
          attachments: summary.json

      - name: Send no-changes email notification
        if: env.no_changes == 'true' && secrets.EMAIL_USERNAME != '' && secrets.NOTIFICATION_EMAIL != ''
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "‚ÑπÔ∏è Pokemon TCG Data - No Changes Detected"
          to: ${{ secrets.NOTIFICATION_EMAIL }}
          from: ${{ secrets.EMAIL_USERNAME }}
          body: |
            üé¥ Pokemon TCG Data Update - No Changes
            =====================================
            
            The daily Pokemon TCG data update ran successfully but no changes were detected.
            
            This means:
            ‚Ä¢ No new cards were found
            ‚Ä¢ No pricing updates were available
            ‚Ä¢ All data remains current
            
            Current Stats:
            ‚Ä¢ Total Cards: ${{ steps.summary.outputs.total_cards }}
            ‚Ä¢ Cards with Pricing: ${{ steps.summary.outputs.cards_with_pricing }}
            ‚Ä¢ Pricing Coverage: ${{ steps.summary.outputs.coverage }}
            
            Time: $(date -u '+%Y-%m-%d %H:%M UTC')
            Next update: Tomorrow at 6:00 AM UTC
            
            ü§ñ Automated by GitHub Actions

      - name: Send failure notification
        if: failure() && secrets.EMAIL_USERNAME != '' && secrets.NOTIFICATION_EMAIL != ''
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "‚ùå Pokemon TCG Data Update Failed - $(date +%Y-%m-%d)"
          to: ${{ secrets.NOTIFICATION_EMAIL }}
          from: ${{ secrets.EMAIL_USERNAME }}
          body: |
            ‚ùå Pokemon TCG Data Update Failed
            ================================
            
            The daily Pokemon TCG data update failed.
            
            üîç Check the GitHub Actions logs for details:
            https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
            
            üìã Failure Details:
            ‚Ä¢ Time: $(date -u '+%Y-%m-%d %H:%M UTC')
            ‚Ä¢ Repository: ${{ github.repository }}
            ‚Ä¢ Workflow: ${{ github.workflow }}
            ‚Ä¢ Run ID: ${{ github.run_id }}
            
            ‚ö†Ô∏è Next scheduled update: Tomorrow at 6:00 AM UTC
            
            üõ†Ô∏è You may need to:
            1. Check the repository secrets (TCGCSV_URL, email settings)
            2. Verify the data source is accessible
            3. Review any recent changes to the scripts
            
            ü§ñ Automated by GitHub Actions

      - name: Upload debug artifacts on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: debug-data-${{ github.run_number }}
          path: |
            data/
            *.log
            *.json
            *.html
            *.txt
          retention-days: 7

      - name: Post-update cleanup
        if: always()
        run: |
          echo "üßπ Cleaning up temporary files..."
          
          # Keep important files, remove temporary ones
          find . -name "*.tmp" -type f -delete 2>/dev/null || true
          find . -name "*.temp" -type f -delete 2>/dev/null || true
          
          echo "‚úÖ Cleanup completed"
